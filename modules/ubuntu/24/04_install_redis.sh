#!/bin/bash

# =============================================================================
# Module 04: Cài đặt Redis (04_install_redis.sh)
# Mục tiêu: Cài đặt và cấu hình Redis server với các tối ưu hóa
# =============================================================================

set -e

# Import cấu hình
source "$(dirname "$(dirname "$(dirname "${BASH_SOURCE[0]}")")")/config.sh"

log_info "=== BƯỚC 5: CÀI ĐẶT REDIS ==="

# Cài đặt Redis server
log_info "Cài đặt Redis Server..."
apt install -y redis-server

# Backup cấu hình gốc
cp /etc/redis/redis.conf "$BACKUP_DIR/redis.conf.bak"

# Cấu hình Redis
log_info "Cấu hình Redis..."

cat > /etc/redis/redis.conf << EOF
# Redis Configuration
# Generated by VPS Management Script

# Network
bind $REDIS_BIND_ADDRESS
port $REDIS_PORT
protected-mode yes
tcp-backlog 511
timeout 0
tcp-keepalive 300

# General
daemonize yes
pidfile /var/run/redis/redis-server.pid
loglevel notice
logfile /var/log/redis/redis-server.log
databases 16

# Security
requirepass $(generate_password 32)

# Memory management
maxmemory $REDIS_MAXMEMORY
maxmemory-policy $REDIS_MAXMEMORY_POLICY

# Persistence
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /var/lib/redis

# Replication
# slave-serve-stale-data yes
# slave-read-only yes

# Append only file
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes

# Lua scripting
lua-time-limit 5000

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Latency monitoring
latency-monitor-threshold 100

# Event notification
notify-keyspace-events ""

# Advanced config
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes
EOF

# Lấy password từ file cấu hình
REDIS_PASSWORD=$(grep "^requirepass" /etc/redis/redis.conf | awk '{print $2}')

# Cấu hình systemd override cho Redis
mkdir -p /etc/systemd/system/redis-server.service.d
cat > /etc/systemd/system/redis-server.service.d/override.conf << 'EOF'
[Service]
# Restart Redis automatically
Restart=always
RestartSec=3

# Security settings
NoNewPrivileges=yes
PrivateTmp=yes
PrivateDevices=yes
ProtectHome=yes
ProtectSystem=strict
ReadWritePaths=/var/lib/redis
ReadWritePaths=/var/log/redis
ReadWritePaths=/var/run/redis

# Resource limits
LimitNOFILE=65535
EOF

# Reload systemd và restart Redis
systemctl daemon-reload
systemctl enable redis-server
systemctl restart redis-server

# Kiểm tra trạng thái Redis
if systemctl is-active --quiet redis-server; then
    log_success "Redis Server đã được cài đặt và khởi động thành công!"
else
    log_error "Lỗi khởi động Redis Server!"
    exit 1
fi

# Cài đặt Redis PHP extension cho tất cả phiên bản PHP
log_info "Cài đặt Redis PHP extension..."

for version in "${PHP_VERSIONS[@]}"; do
    apt install -y "php$version-redis"
    
    # Cấu hình Redis extension
    cat > "/etc/php/$version/mods-available/redis.ini" << 'EOF'
; configuration for php redis module
; priority=20
extension=redis.so

; Redis session handler
;session.save_handler = redis
;session.save_path = "tcp://127.0.0.1:6379?auth=your_password"
EOF

    # Restart PHP-FPM
    systemctl restart "php$version-fpm"
    
    log_success "Redis extension đã được cài đặt cho PHP $version"
done

# Tạo script Redis CLI với authentication
cat > /usr/local/bin/redis-cli-auth << EOF
#!/bin/bash

# Redis CLI with automatic authentication
# Usage: redis-cli-auth [redis-cli options]

redis-cli -a "$REDIS_PASSWORD" "\$@"
EOF

chmod +x /usr/local/bin/redis-cli-auth

# Tạo script giám sát Redis
cat > /usr/local/bin/redis-monitor << 'EOF'
#!/bin/bash

# Redis monitoring script
echo "=== Redis Server Status ==="

if systemctl is-active --quiet redis-server; then
    echo "Status: 🟢 Running"
else
    echo "Status: 🔴 Stopped"
    exit 1
fi

echo ""
echo "=== Redis Info ==="
redis-cli -a "$REDIS_PASSWORD" info server | grep -E "redis_version|uptime_in_seconds|connected_clients"

echo ""
echo "=== Memory Usage ==="
redis-cli -a "$REDIS_PASSWORD" info memory | grep -E "used_memory_human|used_memory_peak_human|maxmemory_human"

echo ""
echo "=== Keyspace ==="
redis-cli -a "$REDIS_PASSWORD" info keyspace

echo ""
echo "=== Recent Slow Queries ==="
redis-cli -a "$REDIS_PASSWORD" slowlog get 5
EOF

# Thay thế password placeholder trong script monitor
sed -i "s/\$REDIS_PASSWORD/$REDIS_PASSWORD/g" /usr/local/bin/redis-monitor
chmod +x /usr/local/bin/redis-monitor

# Tạo script backup Redis
cat > /root/backup_redis.sh << EOF
#!/bin/bash

# Redis backup script
BACKUP_DIR="/root/my-super-script/backups/redis"
DATE=\$(date +%Y%m%d_%H%M%S)
RETENTION_DAYS=7

# Tạo thư mục backup
mkdir -p "\$BACKUP_DIR"

# Backup Redis data
redis-cli -a "$REDIS_PASSWORD" BGSAVE
sleep 5

# Copy RDB file
cp /var/lib/redis/dump.rdb "\$BACKUP_DIR/redis_backup_\$DATE.rdb"

# Compress backup
gzip "\$BACKUP_DIR/redis_backup_\$DATE.rdb"

# Xóa backup cũ
find "\$BACKUP_DIR" -name "*.rdb.gz" -mtime +\$RETENTION_DAYS -delete

echo "Redis backup hoàn tất: \$BACKUP_DIR/redis_backup_\$DATE.rdb.gz"
EOF

chmod +x /root/backup_redis.sh

# Thêm cron job backup Redis hàng ngày (3:00 AM)
(crontab -l 2>/dev/null; echo "0 3 * * * /root/backup_redis.sh >> /var/log/redis_backup.log 2>&1") | crontab -

# Tạo logrotate cho Redis
cat > /etc/logrotate.d/redis-server << 'EOF'
/var/log/redis/*.log {
    daily
    missingok
    rotate 52
    compress
    delaycompress
    notifempty
    create 640 redis redis
    sharedscripts
    postrotate
        systemctl reload redis-server
    endscript
}
EOF

# Test kết nối Redis
log_info "Test kết nối Redis..."
if redis-cli -a "$REDIS_PASSWORD" ping > /dev/null 2>&1; then
    log_success "✅ Redis kết nối thành công!"
else
    log_error "❌ Lỗi kết nối Redis!"
    exit 1
fi

# Test Redis với PHP
log_info "Test Redis với PHP..."
for version in "${PHP_VERSIONS[@]}"; do
    if "/usr/bin/php$version" -m | grep -q redis; then
        log_success "✅ Redis extension hoạt động với PHP $version"
    else
        log_warning "⚠️ Redis extension không hoạt động với PHP $version"
    fi
done

# Ghi thông tin vào credentials file
cat >> "$CREDENTIALS_FILE" << EOF

# Redis Configuration
REDIS_HOST=$REDIS_BIND_ADDRESS
REDIS_PORT=$REDIS_PORT
REDIS_PASSWORD=$REDIS_PASSWORD
REDIS_VERSION=\$(redis-server --version | awk '{print \$3}' | cut -d'=' -f2)

# Redis Tools
REDIS_CLI_AUTH=/usr/local/bin/redis-cli-auth
REDIS_MONITOR=/usr/local/bin/redis-monitor
REDIS_BACKUP_SCRIPT=/root/backup_redis.sh

# Redis Files
REDIS_CONFIG=/etc/redis/redis.conf
REDIS_DATA_DIR=/var/lib/redis
REDIS_LOG_FILE=/var/log/redis/redis-server.log

# Connection strings for applications
REDIS_URL=redis://:$REDIS_PASSWORD@$REDIS_BIND_ADDRESS:$REDIS_PORT/0

EOF

log_success "Module Redis hoàn tất!"
log_info "Redis Server đang chạy trên $REDIS_BIND_ADDRESS:$REDIS_PORT"
log_info "Password: $REDIS_PASSWORD"
log_info "Các công cụ có sẵn:"
log_info "  - redis-cli-auth        : Redis CLI với authentication"
log_info "  - redis-monitor         : Giám sát Redis"

# Hiển thị thông tin Redis
echo ""
echo "=== Thông tin Redis ==="
redis-cli -a "$REDIS_PASSWORD" info server | grep redis_version
echo "Memory limit: $REDIS_MAXMEMORY"
echo "Policy: $REDIS_MAXMEMORY_POLICY"
